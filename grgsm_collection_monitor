#!/bin/bash
# Set debug mode
set -xv
# read frequency from command line
# if no frequency is provided, then exit with code 1
if [ $# -eq 0 ]; then
    echo "No arguments provided"
    exit 1
fi

# Kill whole process group on exit
trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT

# check if grgsm_collector is running
# if not, then restart it
# if yes, then check if it is receiving packets
# if not, then restart it
# if yes, then exit with code 0
# define function grgsm_collector
grgsm_collector(){
  # checks if grgsm_livemon and tshark exist on the system moved to main script
  # Use a timestamp for the filename
  timestamp=$(date +%s)

  # If installed, then start capture and parallely run grgsm_livemon
  tshark -i lo -f udp -w - | tshark -r - -l -Y 'gsm_a.rr.algorithm_identifier' -T fields -e frame.number -e frame.time -e \
  gsm_a.rr.algorithm_identifier -E header=y -E separator=, -E quote=d -E occurrence=f > /app/output/tshark_"$timestamp"_test.csv &

  grgsm_livemon_headless -f $1 -g 40 > /dev/null
}

# define function watchdog
watchdog() {
    # check if grgsm_livemon is running
    if ! pgrep -f "grgsm_livemon" > /dev/null
    then
        echo "Restarting grgsm_livemon"
        # call grgsm_livemon function
        grgsm_livemon_headless -f $1 -g 40 > /dev/null
        # Ramp up time for grgsm_livemon before starting tshark and checking for packets
        sleep 10
    fi

    # check if tshark is running
    if ! pgrep "tshark" > /dev/null
    then
        echo "Restarting tshark"
        # create new timestamp
        timestamp=$(date +%s)
        # call tshark with appropriate parameters
        tshark -i lo -f udp -w - | tshark -r - -l -Y 'gsm_a.rr.algorithm_identifier' -T fields -e frame.number -e frame.time -e \
        gsm_a.rr.algorithm_identifier -E header=y -E separator=, -E quote=d -E occurrence=f > /app/output/tshark_"$timestamp"_test.csv &

    fi


    # if both running then run tshark on loopback interface for 10 seconds and count number of packets received
    tshark -i lo -f udp -a duration:10 -w /tmp/tshark.pcap &> /dev/null &
    tshark_pid=$!
    sleep 30
    kill $tshark_pid

    # count number of packets received
    num_packets=$(tshark -r /tmp/tshark.pcap | wc -l)

    # if number of received packets is smaller then 100, then exit with code 1
    if [ $num_packets -lt 100 ]; then
        echo "Number of packets received: $num_packets is less than expected"
        echo "Restarting grgsm_collector"
        # end grgsm_collector process
        pkill grgsm_livemon
        pkill tshark
        # call grgsm_collector function
        grgsm_collector $1
    fi

    # else exit with code 0
    #exit 0
}
# Check if grgsm_livemon is installed
if ! [ -x "$(command -v grgsm_livemon_headless)" ]; then
  echo 'Error: grgsm_livemon is not installed.' >&2
  exit 1
fi

# Check if tshark is installed
if ! [ -x "$(command -v tshark)" ]; then
  echo 'Error: tshark is not installed.' >&2
  exit 1
fi


# call grgsm_collector function
grgsm_collector $1 &

# While loop to run watchdog function every 5 minutes
while true
do
    sleep 300
    watchdog $1
done
